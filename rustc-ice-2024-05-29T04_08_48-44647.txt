thread 'rustc' panicked at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/compiler/rustc_query_system/src/query/plumbing.rs:725:9:
Found unstable fingerprints for typeck(saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}): TypeckResults { hir_owner: DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection), type_dependent_defs: UnordMap { inner: {1444: Ok((AssocFn, DefId(256:5065 ~ futures_util[8886]::sink::SinkExt::send))), 829: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 250: Ok((Variant, DefId(2:41530 ~ core[aaf1]::option::Option::Some))), 567: Ok((Variant, DefId(2:44326 ~ core[aaf1]::task::poll::Poll::Ready))), 756: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 762: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 238: Ok((Struct, DefId(2:39167 ~ core[aaf1]::ops::range::Range))), 823: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 872: Ok((AssocFn, DefId(294:634 ~ tungstenite[6c23]::protocol::message::{impl#1}::to_text))), 1268: Ok((AssocFn, DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const))), 1317: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1311: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1469: Ok((Variant, DefId(2:44326 ~ core[aaf1]::task::poll::Poll::Ready))), 153: Ok((AssocFn, DefId(2:33983 ~ core[aaf1]::ops::bit::Shl::shl))), 1628: Ok((Variant, DefId(2:44329 ~ core[aaf1]::task::poll::Poll::Pending))), 80: Ok((AssocFn, DefId(0:568 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status))), 1616: Ok((AssocFn, DefId(2:44301 ~ core[aaf1]::future::future::Future::poll))), 1031: Ok((AssocFn, DefId(261:9081 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send))), 123: Ok((AssocFn, DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future))), 1592: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 629: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1074: Ok((AssocFn, DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future))), 623: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 556: Ok((Fn, DefId(2:13551 ~ core[aaf1]::future::get_context))), 44: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 38: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1196: Ok((AssocFn, DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug))), 1458: Ok((Fn, DefId(2:13551 ~ core[aaf1]::future::get_context))), 93: Ok((AssocFn, DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked))), 1501: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1507: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 20: Ok((AssocFn, DefId(256:2757 ~ futures_util[8886]::stream::stream::StreamExt::split))), 849: Ok((AssocFn, DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const))), 1044: Ok((AssocFn, DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked))), 1568: Ok((AssocFn, DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const))), 1586: Ok((AssocFn, DefId(2:10190 ~ core[aaf1]::fmt::rt::{impl#1}::none))), 197: Ok((AssocFn, DefId(261:9057 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv))), 1599: Ok((AssocFn, DefId(0:568 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status))), 508: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 502: Ok((AssocFn, DefId(2:10190 ~ core[aaf1]::fmt::rt::{impl#1}::none))), 1203: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 106: Ok((Variant, DefId(2:44326 ~ core[aaf1]::task::poll::Poll::Ready))), 1642: Ok((AssocFn, DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future))), 417: Ok((AssocFn, DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked))), 1057: Ok((Variant, DefId(2:44326 ~ core[aaf1]::task::poll::Poll::Ready))), 1441: Ok((AssocFn, DefId(2:9560 ~ core[aaf1]::result::{impl#0}::inspect_err))), 1173: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1167: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1612: Ok((AssocFn, DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked))), 649: Ok((AssocFn, DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const))), 1289: Ok((AssocFn, DefId(2:9560 ~ core[aaf1]::result::{impl#0}::inspect_err))), 64: Ok((AssocFn, DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const))), 1472: Ok((Variant, DefId(2:44329 ~ core[aaf1]::task::poll::Poll::Pending))), 570: Ok((Variant, DefId(2:44329 ~ core[aaf1]::task::poll::Poll::Pending))), 247: Ok((Variant, DefId(2:41528 ~ core[aaf1]::option::Option::None))), 948: Ok((AssocFn, DefId(2:9560 ~ core[aaf1]::result::{impl#0}::inspect_err))), 1460: Ok((AssocFn, DefId(2:44301 ~ core[aaf1]::future::future::Future::poll))), 558: Ok((AssocFn, DefId(2:44301 ~ core[aaf1]::future::future::Future::poll))), 1527: Ok((AssocFn, DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const))), 808: Ok((AssocFn, DefId(294:628 ~ tungstenite[6c23]::protocol::message::{impl#1}::is_close))), 95: Ok((Fn, DefId(2:13551 ~ core[aaf1]::future::get_context))), 1119: Ok((AssocFn, DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display))), 1625: Ok((Variant, DefId(2:44326 ~ core[aaf1]::task::poll::Poll::Ready))), 918: Ok((AssocFn, DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display))), 1046: Ok((Fn, DefId(2:13551 ~ core[aaf1]::future::get_context))), 717: Ok((AssocFn, DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display))), 1418: Ok((AssocFn, DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug))), 1028: Ok((AssocFn, DefId(2:9560 ~ core[aaf1]::result::{impl#0}::inspect_err))), 193: Ok((AssocFn, DefId(256:2674 ~ futures_util[8886]::stream::stream::StreamExt::next))), 309: Ok((AssocFn, DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked))), 693: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 175: Ok((AssocFn, DefId(2:33983 ~ core[aaf1]::ops::bit::Shl::shl))), 687: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 870: Ok((AssocFn, DefId(2:9560 ~ core[aaf1]::result::{impl#0}::inspect_err))), 998: Ok((AssocFn, DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display))), 1126: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 925: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 1242: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1248: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 724: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 785: Ok((AssocFn, DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug))), 1425: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 1486: Ok((AssocFn, DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future))), 584: Ok((AssocFn, DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future))), 1096: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1090: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 895: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1340: Ok((AssocFn, DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display))), 889: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1614: Ok((Fn, DefId(2:13551 ~ core[aaf1]::future::get_context))), 1395: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 1456: Ok((AssocFn, DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked))), 109: Ok((Variant, DefId(2:44329 ~ core[aaf1]::task::poll::Poll::Pending))), 554: Ok((AssocFn, DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked))), 1005: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 1060: Ok((Variant, DefId(2:44329 ~ core[aaf1]::task::poll::Poll::Pending))), 97: Ok((AssocFn, DefId(2:44301 ~ core[aaf1]::future::future::Future::poll))), 670: Ok((AssocFn, DefId(2:9560 ~ core[aaf1]::result::{impl#0}::inspect_err))), 1371: Ok((AssocFn, DefId(294:620 ~ tungstenite[6c23]::protocol::message::{impl#1}::text))), 792: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1))), 1048: Ok((AssocFn, DefId(2:44301 ~ core[aaf1]::future::future::Future::poll))), 1389: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 975: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 524: Ok((AssocFn, DefId(2:8169 ~ core[aaf1]::iter::traits::collect::IntoIterator::into_iter))), 969: Ok((AssocFn, DefId(2:2708 ~ core[aaf1]::cmp::PartialOrd::le))), 518: Ok((AssocFn, DefId(2:8315 ~ core[aaf1]::iter::traits::iterator::Iterator::next))), 1347: Ok((AssocFn, DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1)))} }, field_indices: UnordMap { inner: {240: 0, 249: 0, 243: 1, 199: 1, 1056: 0, 1624: 0, 1468: 0, 1033: 0, 566: 0, 105: 0} }, nested_fields: UnordMap { inner: {} }, node_types: UnordMap { inner: {378: !, 567: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 756: bool, 1134: u32, 220: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 598: (), 787: [core::fmt::rt::Argument<'{erased}>; 1_usize], 976: log::Level, 1165: (), 1354: &'{erased} str, 62: std::fmt::Arguments<'{erased}>, 440: std::option::Option<remote::GameMessage>, 629: bool, 1196: FnDef(DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug), ['{erased}, std::option::Option<remote::GameMessage>]), 1385: log::Level, 1574: !, 93: FnDef(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), [&'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), true]), 282: u8, 660: (), 849: FnDef(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), ['{erased}, true]), 1038: Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) }), 1416: core::fmt::rt::Argument<'{erased}>, 124: Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 313: &'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, 502: FnDef(DefId(2:10190 ~ core[aaf1]::fmt::rt::{impl#1}::none), ['{erased}]), 1069: std::future::ResumeTy, 155: {type error}, 533: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 722: std::fmt::Arguments<'{erased}>, 911: &'{erased} [&'{erased} str; 1_usize], 1100: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1289: std::result::Result<std::string::String, serde_json::Error>, 1478: (), 186: (), 375: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 753: log::Level, 942: &'{erased} str, 1131: &'{erased} str, 1320: log::LevelFilter, 28: (), 217: Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}]), 406: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 595: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 1351: (&'{erased} str, &'{erased} str, &'{erased} str), 1540: (), 59: [&'{erased} str; 1_usize], 437: std::option::Option<remote::GameMessage>, 626: log::LevelFilter, 815: log::Level, 1571: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 90: &'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 279: u32, 468: (), 657: u32, 1224: std::option::Option<remote::GameMessage>, 121: (), 688: log::Level, 877: &'{erased} tungstenite::Error, 1066: (), 1255: bool, 1444: futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>, 341: bool, 530: bool, 719: [core::fmt::rt::Argument<'{erased}>; 1_usize], 908: std::fmt::Arguments<'{erased}>, 1097: log::Level, 1286: remote::GameMessage, 183: u8, 561: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 939: &'{erased} tungstenite::Error, 1317: bool, 25: futures_util::stream::SplitSink<S/#0, tungstenite::Message>, 403: !, 781: &'{erased} tungstenite::Message, 970: log::Level, 1159: log::Level, 1348: log::Level, 245: (), 434: &'{erased} mut std::task::Context<'{erased}>, 623: bool, 812: bool, 1001: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize], 1190: std::option::Option<remote::GameMessage>, 1379: (), 1568: FnDef(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), ['{erased}, true]), 87: Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 654: &'{erased} str, 843: &'{erased} str, 1410: [&'{erased} str; 1_usize], 1599: Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 118: std::future::ResumeTy, 307: std::pin::Pin<&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>>, 496: &'{erased} str, 685: (), 874: tungstenite::Message, 1252: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1441: std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>, 1630: (), 338: (), 527: (), 1283: !, 1472: std::task::Poll<std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>>, 180: (), 558: FnDef(DefId(2:44301 ~ core[aaf1]::future::future::Future::poll), [tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>]), 936: (), 1314: log::LevelFilter, 22: S/#0, 211: tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>, 400: !, 589: (), 778: &'{erased} [&'{erased} str; 1_usize], 967: (), 1156: (), 1345: std::fmt::Arguments<'{erased}>, 1534: &'{erased} str, 53: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 620: log::Level, 998: FnDef(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), ['{erased}, &'{erased} serde_json::Error]), 1187: &'{erased} str, 84: remote::widgets::NetStatus, 273: u32, 462: (), 1596: (), 115: (), 304: &'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, 1060: std::task::Poll<std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>>, 1249: log::Level, 1438: (), 146: bool, 335: std::task::Poll<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>>, 524: FnDef(DefId(2:8169 ~ core[aaf1]::iter::traits::collect::IntoIterator::into_iter), [std::ops::Range<u32>]), 713: &'{erased} &'{erased} tungstenite::Error, 902: bool, 1091: log::Level, 1280: (), 1469: std::task::Poll<std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>>, 177: {type error}, 366: !, 555: std::pin::Pin<&'{erased} mut tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>>, 933: u32, 1122: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize], 1311: bool, 1500: bool, 208: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 397: u8, 586: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 775: std::fmt::Arguments<'{erased}>, 1153: std::option::Option<remote::GameMessage>, 1342: [core::fmt::rt::Argument<'{erased}>; 1_usize], 1531: (&'{erased} str, &'{erased} str, &'{erased} str), 239: u32, 428: std::task::Poll<std::option::Option<remote::GameMessage>>, 1373: tungstenite::Message, 1562: &'{erased} str, 270: u32, 459: u8, 837: (), 1026: !, 1215: (), 1404: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 301: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 490: !, 679: log::Level, 1057: std::task::Poll<std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>>, 143: u8, 332: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 710: &'{erased} [&'{erased} str; 2_usize], 899: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1088: (), 1277: (), 741: tungstenite::Message, 930: &'{erased} str, 1119: FnDef(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), ['{erased}, &'{erased} tokio::sync::mpsc::error::SendError<remote::GameMessage>]), 1308: log::Level, 1497: log::Level, 16: std::future::ResumeTy, 205: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 961: log::Level, 1528: log::Level, 47: log::LevelFilter, 236: u32, 425: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })>, 803: (), 992: &'{erased} serde_json::Error, 1181: (), 1370: tungstenite::Message, 267: (), 456: (), 645: &'{erased} [&'{erased} str; 1_usize], 1023: std::result::Result<remote::GameMessage, serde_json::Error>, 1212: (), 1590: std::fmt::Arguments<'{erased}>, 109: std::task::Poll<()>, 487: u32, 676: &'{erased} tungstenite::Error, 1243: log::Level, 1432: &'{erased} str, 1621: (), 140: FnDef(DefId(2:2940 ~ core[aaf1]::default::Default::default), [u8]), 329: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 518: FnDef(DefId(2:8315 ~ core[aaf1]::iter::traits::iterator::Iterator::next), [std::ops::Range<u32>]), 707: &'{erased} str, 896: log::Level, 1274: &'{erased} str, 1463: std::task::Poll<std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>>, 360: (), 738: &'{erased} tungstenite::Error, 13: S/#0, 202: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 391: bool, 580: (), 769: bool, 958: &'{erased} serde_json::Error, 1336: &'{erased} &'{erased} serde_json::Error, 1525: std::fmt::Arguments<'{erased}>, 44: bool, 233: u32, 800: u32, 989: &'{erased} str, 1556: !, 75: (), 264: u32, 453: !, 642: std::fmt::Arguments<'{erased}>, 1020: std::result::Result<remote::GameMessage, serde_json::Error>, 1209: &'{erased} str, 1398: log::LevelFilter, 1587: [core::fmt::rt::Argument<'{erased}>; 0_usize], 106: std::task::Poll<()>, 295: !, 862: (), 1051: std::task::Poll<std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>>, 1240: (), 1429: (&'{erased} str, &'{erased} str, &'{erased} str), 1618: std::task::Poll<()>, 326: &'{erased} mut std::task::Context<'{erased}>, 1082: log::Level, 1271: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1460: FnDef(DefId(2:44301 ~ core[aaf1]::future::future::Future::poll), [futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>]), 1649: (), 168: bool, 546: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 735: (), 1113: &'{erased} tokio::sync::mpsc::error::SendError<remote::GameMessage>, 1491: (), 10: S/#0, 199: tokio::sync::mpsc::Receiver<remote::GameMessage>, 388: u8, 577: std::future::ResumeTy, 766: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1144: (), 1333: &'{erased} [&'{erased} str; 1_usize], 1522: [&'{erased} str; 1_usize], 41: log::LevelFilter, 419: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })>, 797: &'{erased} str, 1364: std::string::String, 1553: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 72: u32, 1017: (), 1206: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1395: bool, 1584: core::fmt::rt::Argument<'{erased}>, 292: bool, 670: std::result::Result<tungstenite::Message, tungstenite::Error>, 1048: FnDef(DefId(2:44301 ~ core[aaf1]::future::future::Future::poll), [Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) })]), 1426: log::Level, 1615: &'{erased} mut std::task::Context<'{erased}>, 512: (), 701: (), 890: log::Level, 1079: (), 1268: FnDef(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), ['{erased}, true]), 1457: std::pin::Pin<&'{erased} mut futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>>, 1646: (), 165: (), 354: (), 732: u32, 921: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize], 1110: &'{erased} str, 1299: &'{erased} serde_json::Error, 1488: Closure(DefId(0:1857 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#6}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) }),)), [Region(BrAnon)]), {type error}]), 385: u8, 574: (), 763: log::Level, 1141: &'{erased} tokio::sync::mpsc::error::SendError<remote::GameMessage>, 1330: std::fmt::Arguments<'{erased}>, 38: bool, 227: u32, 416: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })>, 605: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 983: (), 1361: &'{erased} serde_json::Error, 69: &'{erased} str, 258: u32, 447: bool, 636: bool, 1014: (), 1203: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 1392: log::LevelFilter, 1581: [&'{erased} str; 1_usize], 100: std::task::Poll<()>, 478: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 667: std::result::Result<tungstenite::Message, tungstenite::Error>, 856: &'{erased} str, 1045: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) })>, 1234: log::Level, 1423: std::fmt::Arguments<'{erased}>, 1612: FnDef(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), [&'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), true]), 320: std::task::Poll<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>>, 887: (), 1076: Closure(DefId(0:1855 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#4}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 tokio::sync::mpsc::error::SendError<remote::GameMessage>,)), [Region(BrAnon)]), {type error}]), 1643: Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 351: u8, 729: &'{erased} str, 918: FnDef(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), ['{erased}, &'{erased} tungstenite::Error]), 1296: remote::GameMessage, 193: futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, 382: !, 571: (), 1138: (), 1516: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 35: log::Level, 224: bool, 413: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 1358: (), 255: (), 633: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 822: bool, 1011: &'{erased} str, 1389: bool, 97: FnDef(DefId(2:44301 ~ core[aaf1]::future::future::Future::poll), [Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })]), 286: u8, 475: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 664: !, 853: (&'{erased} str, &'{erased} str, &'{erased} str), 1231: !, 1420: [core::fmt::rt::Argument<'{erased}>; 1_usize], 1609: &'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 317: std::pin::Pin<&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>>, 506: std::fmt::Arguments<'{erased}>, 1262: &'{erased} str, 1640: (), 159: u8, 348: (), 537: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 1104: (), 1482: (), 1: &'{erased} mut remote::communicate::ConnectionContext, 190: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 379: u32, 568: !, 757: log::Level, 946: !, 1135: (), 1324: bool, 410: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 788: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize], 1166: bool, 1355: u32, 1544: (), 252: u32, 630: log::Level, 819: log::Level, 1008: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1197: core::fmt::rt::Argument<'{erased}>, 1386: log::Level, 1575: FnDef(DefId(2:9379 ~ core[aaf1]::panicking::panic_fmt), [true]), 94: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })>, 283: (), 472: !, 661: (), 850: log::Level, 1606: Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 503: [core::fmt::rt::Argument<'{erased}>; 0_usize], 881: log::Level, 1070: (), 1448: tungstenite::Message, 1637: std::future::ResumeTy, 156: u8, 345: !, 912: &'{erased} tungstenite::Error, 1479: std::future::ResumeTy, 187: (), 565: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 754: (), 943: std::result::Result<&'{erased} str, tungstenite::Error>, 1132: &'{erased} str, 1321: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1510: log::LevelFilter, 218: &'{erased} mut std::task::Context<'{erased}>, 407: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 596: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 785: FnDef(DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug), ['{erased}, tungstenite::Message]), 1163: log::Level, 1352: &'{erased} str, 1541: &'{erased} Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) }), 60: &'{erased} [&'{erased} str; 1_usize], 438: std::task::Poll<std::option::Option<remote::GameMessage>>, 1005: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 1194: core::fmt::rt::Argument<'{erased}>, 469: (), 658: (), 847: std::fmt::Arguments<'{erased}>, 1036: remote::GameMessage, 1414: &'{erased} tungstenite::Message, 1603: remote::widgets::NetStatus, 311: std::pin::Pin<&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>>, 500: core::fmt::rt::Argument<'{erased}>, 878: &'{erased} tungstenite::Error, 1067: std::future::ResumeTy, 1256: (), 1634: (), 153: u8, 720: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize], 909: &'{erased} str, 1287: remote::GameMessage, 1476: (), 562: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 940: std::result::Result<&'{erased} str, tungstenite::Error>, 1129: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1318: log::Level, 1507: bool, 26: futures_util::stream::SplitStream<S/#0>, 1538: (), 57: std::fmt::Arguments<'{erased}>, 246: !, 624: log::Level, 813: (), 277: u8, 466: &'{erased} std::option::Option<remote::GameMessage>, 655: &'{erased} str, 844: [&'{erased} str; 1_usize], 1033: tokio::sync::mpsc::Sender<remote::GameMessage>, 1411: &'{erased} [&'{erased} str; 1_usize], 119: (), 308: std::pin::Pin<&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>>, 497: [&'{erased} str; 1_usize], 686: bool, 1064: (), 150: u8, 339: bool, 717: FnDef(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), ['{erased}, &'{erased} tungstenite::Error]), 1473: (), 181: u8, 370: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 559: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 748: log::Level, 937: (), 1126: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 1504: log::LevelFilter, 212: FnDef(DefId(261:103 ~ tokio[4bca]::future::poll_fn::poll_fn), [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])]), 590: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 779: tungstenite::Message, 968: bool, 1157: (), 1535: u32, 432: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })>, 621: (), 810: tungstenite::Message, 999: core::fmt::rt::Argument<'{erased}>, 1188: [&'{erased} str; 1_usize], 1377: tungstenite::Message, 1566: std::fmt::Arguments<'{erased}>, 463: &'{erased} std::option::Option<remote::GameMessage>, 652: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1030: std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>, 1219: remote::GameMessage, 1408: std::fmt::Arguments<'{erased}>, 116: std::future::ResumeTy, 305: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 683: log::Level, 872: std::result::Result<&'{erased} str, tungstenite::Error>, 1061: (), 1628: std::task::Poll<()>, 147: bool, 525: std::ops::Range<u32>, 903: (), 1281: (), 1470: !, 178: u8, 367: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 556: FnDef(DefId(2:13551 ~ core[aaf1]::future::get_context), ['{erased}, '{erased}]), 745: !, 934: (), 1312: log::Level, 1501: bool, 20: (futures_util::stream::SplitSink<S/#0, tungstenite::Message>, futures_util::stream::SplitStream<S/#0>), 209: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 587: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 776: &'{erased} str, 965: log::Level, 1154: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 1343: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize], 1532: &'{erased} str, 51: bool, 429: FnDef(DefId(2:44301 ~ core[aaf1]::future::future::Future::poll), [Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })]), 807: (), 996: core::fmt::rt::Argument<'{erased}>, 1563: [&'{erased} str; 1_usize], 82: &'{erased} mut remote::communicate::ConnectionContext, 649: FnDef(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), ['{erased}, true]), 838: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1216: (), 1594: !, 113: (), 491: FnDef(DefId(2:9379 ~ core[aaf1]::panicking::panic_fmt), [true]), 1058: !, 1436: (), 1625: std::task::Poll<()>, 144: u8, 522: !, 711: &'{erased} tungstenite::Error, 1089: bool, 1467: std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>, 175: u8, 364: !, 553: std::future::ResumeTy, 742: std::result::Result<tungstenite::Message, tungstenite::Error>, 931: &'{erased} str, 1120: core::fmt::rt::Argument<'{erased}>, 1309: (), 1498: log::Level, 17: std::future::ResumeTy, 206: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 395: u8, 584: FnDef(DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future), [tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>]), 1340: FnDef(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), ['{erased}, &'{erased} serde_json::Error]), 48: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 237: u32, 615: log::Level, 804: (), 1182: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1371: FnDef(DefId(294:620 ~ tungstenite[6c23]::protocol::message::{impl#1}::text), [std::string::String]), 79: (), 457: u8, 1024: !, 1402: bool, 110: (), 299: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 677: (), 866: !, 1055: std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>, 1433: u32, 330: std::task::Poll<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>>, 519: std::option::Option<u32>, 708: &'{erased} str, 1086: log::Level, 1275: &'{erased} str, 1464: std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>, 172: u8, 361: (), 550: tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>, 739: std::result::Result<tungstenite::Message, tungstenite::Error>, 928: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1117: core::fmt::rt::Argument<'{erased}>, 203: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 392: u8, 770: (), 959: (), 1148: !, 45: log::Level, 423: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })>, 612: !, 801: (), 990: [&'{erased} str; 1_usize], 1368: !, 1557: FnDef(DefId(2:9379 ~ core[aaf1]::panicking::panic_fmt), [true]), 76: (), 454: std::option::Option<remote::GameMessage>, 643: &'{erased} str, 832: log::LevelFilter, 1210: &'{erased} str, 1399: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1588: &'{erased} [core::fmt::rt::Argument<'{erased}>; 0_usize], 107: !, 296: !, 674: Closure(DefId(0:1852 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#1}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 tungstenite::Error,)), [Region(BrAnon)]), {type error}]), 1052: std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>, 1241: bool, 1430: &'{erased} str, 1619: std::task::Poll<()>, 516: std::ops::Range<u32>, 1272: (&'{erased} str, &'{erased} str, &'{erased} str), 1461: std::task::Poll<std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>>, 1650: Coroutine(DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}), [S/#0, (), std::future::ResumeTy, (), (), {type error}, {type error}]), 169: bool, 358: &'{erased} std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 547: &'{erased} mut std::task::Context<'{erased}>, 736: (), 925: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 1303: log::Level, 200: &'{erased} mut remote::communicate::ConnectionContext, 389: u8, 956: Closure(DefId(0:1854 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#3}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 serde_json::Error,)), [Region(BrAnon)]), {type error}]), 1145: std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>, 1334: &'{erased} serde_json::Error, 1523: &'{erased} [&'{erased} str; 1_usize], 798: &'{erased} str, 1176: log::LevelFilter, 1365: std::result::Result<std::string::String, serde_json::Error>, 73: (), 262: u32, 451: !, 829: bool, 1018: (), 1207: (&'{erased} str, &'{erased} str, &'{erased} str), 1396: log::Level, 104: (), 293: !, 860: (), 1049: std::task::Poll<std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>>, 1238: log::Level, 1616: FnDef(DefId(2:44301 ~ core[aaf1]::future::future::Future::poll), [Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })]), 324: std::pin::Pin<&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>>, 702: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1080: (), 1269: log::Level, 1458: FnDef(DefId(2:13551 ~ core[aaf1]::future::get_context), ['{erased}, '{erased}]), 1647: (), 355: &'{erased} std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 733: (), 1111: [&'{erased} str; 1_usize], 1300: &'{erased} serde_json::Error, 1489: &'{erased} Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) }), 8: S/#0, 197: Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) }), 386: u32, 1142: std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>, 1331: &'{erased} str, 1520: std::fmt::Arguments<'{erased}>, 39: log::Level, 228: FnDef(DefId(261:794 ~ tokio[4bca]::macros::support::thread_rng_n), []), 417: FnDef(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), [&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) }), true]), 795: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 984: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1173: bool, 1362: std::result::Result<std::string::String, serde_json::Error>, 70: &'{erased} str, 259: u32, 637: (), 826: log::LevelFilter, 1204: log::Level, 1582: &'{erased} [&'{erased} str; 1_usize], 101: (), 290: u8, 479: FnDef(DefId(0:1865 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::__tokio_select_util::Out::_1#1::{constructor#0}), [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>]), 668: std::result::Result<tungstenite::Message, tungstenite::Error>, 857: u32, 1046: FnDef(DefId(2:13551 ~ core[aaf1]::future::get_context), ['{erased}, '{erased}]), 1613: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })>, 321: FnDef(DefId(2:44301 ~ core[aaf1]::future::future::Future::poll), [futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>]), 510: !, 888: bool, 1077: &'{erased} tokio::sync::mpsc::error::SendError<remote::GameMessage>, 1266: std::fmt::Arguments<'{erased}>, 1455: std::future::ResumeTy, 541: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 730: &'{erased} str, 919: core::fmt::rt::Argument<'{erased}>, 1486: FnDef(DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future), [futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>]), 5: &'{erased} mut remote::communicate::ConnectionContext, 572: (), 950: std::result::Result<remote::GameMessage, serde_json::Error>, 1139: (), 36: (), 792: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 1170: log::LevelFilter, 1359: (), 1548: !, 67: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 256: u32, 445: !, 823: bool, 1012: &'{erased} str, 1201: std::fmt::Arguments<'{erased}>, 1390: log::Level, 1579: std::fmt::Arguments<'{erased}>, 98: std::task::Poll<()>, 476: FnDef(DefId(2:44327 ~ core[aaf1]::task::poll::Poll::Ready::{constructor#0}), [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>]), 854: &'{erased} str, 1043: std::future::ResumeTy, 1232: (), 1421: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize], 696: log::LevelFilter, 885: log::Level, 1074: FnDef(DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future), [Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) })]), 1263: [&'{erased} str; 1_usize], 1452: futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>, 349: u8, 538: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 727: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 916: core::fmt::rt::Argument<'{erased}>, 1105: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 2: &'{erased} mut remote::communicate::ConnectionContext, 380: u32, 1325: (), 1514: bool, 222: bool, 411: futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, 600: std::result::Result<tungstenite::Message, tungstenite::Error>, 978: log::LevelFilter, 1167: bool, 1356: (), 1545: std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>, 64: FnDef(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), ['{erased}, true]), 253: u32, 820: log::Level, 1009: (&'{erased} str, &'{erased} str, &'{erased} str), 1198: [core::fmt::rt::Argument<'{erased}>; 1_usize], 1387: (), 95: FnDef(DefId(2:13551 ~ core[aaf1]::future::get_context), ['{erased}, '{erased}]), 284: bool, 662: (), 1040: Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) }), 1229: std::option::Option<remote::GameMessage>, 1418: FnDef(DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug), ['{erased}, tungstenite::Message]), 126: (), 315: std::pin::Pin<&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>>, 504: &'{erased} [core::fmt::rt::Argument<'{erased}>; 0_usize], 693: bool, 1638: (), 157: u8, 346: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 535: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 724: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 1291: std::result::Result<std::string::String, serde_json::Error>, 755: bool, 944: !, 1133: &'{erased} str, 1511: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 30: log::Level, 219: &'{erased} mut std::task::Context<'{erased}>, 408: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 786: core::fmt::rt::Argument<'{erased}>, 975: bool, 1164: log::Level, 1353: &'{erased} str, 1542: std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>, 250: std::option::Option<u32>, 1006: log::Level, 1573: !, 92: std::future::ResumeTy, 281: u8, 470: &'{erased} std::option::Option<remote::GameMessage>, 1226: remote::GameMessage, 123: FnDef(DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future), [Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })]), 690: log::LevelFilter, 879: (), 1257: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1446: futures_util::stream::SplitSink<S/#0, tungstenite::Message>, 1635: std::future::ResumeTy, 154: u8, 343: !, 532: bool, 910: [&'{erased} str; 1_usize], 1099: log::LevelFilter, 563: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 752: log::Level, 1130: (&'{erased} str, &'{erased} str, &'{erased} str), 1508: log::Level, 27: (futures_util::stream::SplitSink<S/#0, tungstenite::Message>, futures_util::stream::SplitStream<S/#0>), 783: core::fmt::rt::Argument<'{erased}>, 972: log::LevelFilter, 1350: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1539: (), 58: &'{erased} str, 247: std::option::Option<u32>, 1003: std::fmt::Arguments<'{erased}>, 1192: &'{erased} std::option::Option<remote::GameMessage>, 1381: log::Level, 1570: !, 89: Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 278: u8, 656: &'{erased} str, 845: &'{erased} [&'{erased} str; 1_usize], 1034: &'{erased} mut remote::communicate::ConnectionContext, 1223: remote::GameMessage, 1412: tungstenite::Message, 1601: &'{erased} mut remote::communicate::ConnectionContext, 309: FnDef(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), [&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, true]), 498: &'{erased} [&'{erased} str; 1_usize], 687: bool, 876: Closure(DefId(0:1853 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#2}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 tungstenite::Error,)), [Region(BrAnon)]), {type error}]), 1443: std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>, 1632: (), 529: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 718: core::fmt::rt::Argument<'{erased}>, 1096: bool, 1285: !, 1474: (), 371: FnDef(DefId(0:1862 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::__tokio_select_util::Out::_0#1::{constructor#0}), [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>]), 560: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 938: (), 1127: log::Level, 24: (futures_util::stream::SplitSink<S/#0, tungstenite::Message>, futures_util::stream::SplitStream<S/#0>), 402: !, 969: bool, 1347: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 1536: (), 244: u32, 622: bool, 1000: [core::fmt::rt::Argument<'{erased}>; 1_usize], 1189: &'{erased} [&'{erased} str; 1_usize], 1378: tungstenite::Message, 275: !, 464: std::option::Option<remote::GameMessage>, 653: (&'{erased} str, &'{erased} str, &'{erased} str), 842: std::fmt::Arguments<'{erased}>, 1031: Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) }), 1220: std::option::Option<remote::GameMessage>, 1409: &'{erased} str, 1598: (), 495: std::fmt::Arguments<'{erased}>, 684: log::Level, 1062: (), 1251: log::LevelFilter, 1629: (), 148: bool, 337: !, 526: (), 715: core::fmt::rt::Argument<'{erased}>, 904: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1093: log::LevelFilter, 179: u8, 368: FnDef(DefId(2:44327 ~ core[aaf1]::task::poll::Poll::Ready::{constructor#0}), [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>]), 557: &'{erased} mut std::task::Context<'{erased}>, 746: (), 1124: std::fmt::Arguments<'{erased}>, 1502: log::Level, 210: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 399: bool, 588: remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, 777: [&'{erased} str; 1_usize], 966: log::Level, 1533: &'{erased} str, 52: (), 241: u32, 619: log::Level, 808: bool, 1186: std::fmt::Arguments<'{erased}>, 1375: std::string::String, 1564: &'{erased} [&'{erased} str; 1_usize], 272: u32, 650: log::Level, 1028: std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>, 1595: (), 303: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 870: std::result::Result<&'{erased} str, tungstenite::Error>, 1248: bool, 1437: (), 1626: !, 145: (), 1090: bool, 1279: (), 176: u8, 554: FnDef(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), [&'{erased} mut tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>, true]), 743: !, 932: &'{erased} str, 1121: [core::fmt::rt::Argument<'{erased}>; 1_usize], 1310: bool, 1499: (), 18: std::future::ResumeTy, 585: tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>, 1341: core::fmt::rt::Argument<'{erased}>, 1530: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 238: std::ops::Range<u32>, 427: std::option::Option<remote::GameMessage>, 805: (), 994: &'{erased} &'{erased} serde_json::Error, 1561: std::fmt::Arguments<'{erased}>, 80: Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 269: (), 647: std::fmt::Arguments<'{erased}>, 836: bool, 1214: (), 1403: (), 1592: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 111: (), 300: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 489: !, 867: !, 1245: log::LevelFilter, 1434: (), 1623: (), 520: (), 709: [&'{erased} str; 2_usize], 898: log::LevelFilter, 1087: log::Level, 1276: u32, 1465: std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>, 362: &'{erased} std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 551: &'{erased} mut tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>, 929: (&'{erased} str, &'{erased} str, &'{erased} str), 1307: log::Level, 393: u8, 582: (), 771: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1149: (), 1338: core::fmt::rt::Argument<'{erased}>, 1527: FnDef(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), ['{erased}, true]), 235: u32, 424: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })>, 613: (), 991: &'{erased} [&'{erased} str; 1_usize], 1180: bool, 77: (), 455: std::option::Option<remote::GameMessage>, 644: [&'{erased} str; 1_usize], 833: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1022: remote::GameMessage, 1211: u32, 486: !, 675: &'{erased} tungstenite::Error, 864: !, 1053: std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>, 1242: bool, 1431: &'{erased} str, 1620: (), 139: u8, 517: &'{erased} mut std::ops::Range<u32>, 706: std::fmt::Arguments<'{erased}>, 895: bool, 1273: &'{erased} str, 1462: std::task::Poll<std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>>, 170: bool, 548: tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>, 737: (), 926: log::Level, 1115: &'{erased} &'{erased} tokio::sync::mpsc::error::SendError<remote::GameMessage>, 1493: log::Level, 12: S/#0, 390: (), 579: std::future::ResumeTy, 957: &'{erased} serde_json::Error, 1146: !, 421: &'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) }), 610: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 799: &'{erased} str, 988: std::fmt::Arguments<'{erased}>, 1177: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1366: !, 1555: !, 830: log::Level, 1019: &'{erased} serde_json::Error, 1208: &'{erased} str, 1586: FnDef(DefId(2:10190 ~ core[aaf1]::fmt::rt::{impl#1}::none), ['{erased}]), 483: std::option::Option<remote::GameMessage>, 672: std::result::Result<tungstenite::Message, tungstenite::Error>, 861: (), 1050: std::task::Poll<std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>>, 1239: log::Level, 1428: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1617: std::task::Poll<()>, 136: u8, 514: std::ops::Range<u32>, 892: log::LevelFilter, 1459: &'{erased} mut std::task::Context<'{erased}>, 1648: (), 167: (), 356: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 545: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 923: std::fmt::Arguments<'{erased}>, 1112: &'{erased} [&'{erased} str; 1_usize], 1301: (), 1490: &'{erased} Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) }), 9: S/#0, 576: (), 765: log::LevelFilter, 954: &'{erased} str, 1332: [&'{erased} str; 1_usize], 1521: &'{erased} str, 607: std::result::Result<tungstenite::Message, tungstenite::Error>, 796: (&'{erased} str, &'{erased} str, &'{erased} str), 1174: log::Level, 71: &'{erased} str, 260: u32, 449: bool, 638: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1016: (), 102: (), 858: (), 1047: &'{erased} mut std::task::Context<'{erased}>, 1425: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 1614: FnDef(DefId(2:13551 ~ core[aaf1]::future::get_context), ['{erased}, '{erased}]), 511: (), 700: bool, 889: bool, 1078: &'{erased} tokio::sync::mpsc::error::SendError<remote::GameMessage>, 1456: FnDef(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), [&'{erased} mut futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>, true]), 1645: (), 164: (), 731: &'{erased} str, 920: [core::fmt::rt::Argument<'{erased}>; 1_usize], 1109: std::fmt::Arguments<'{erased}>, 1298: Closure(DefId(0:1856 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#5}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 serde_json::Error,)), [Region(BrAnon)]), {type error}]), 1487: futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>, 6: &'{erased} mut remote::communicate::ConnectionContext, 195: futures_util::stream::SplitStream<S/#0>, 384: u8, 762: bool, 951: FnDef(DefId(212:350 ~ serde_json[ddef]::de::from_str), ['{erased}, remote::GameMessage]), 1140: (), 37: bool, 226: u32, 415: std::pin::Pin<&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })>, 604: std::result::Result<tungstenite::Message, tungstenite::Error>, 793: log::Level, 982: bool, 1360: (), 1549: (), 68: (&'{erased} str, &'{erased} str, &'{erased} str), 446: (), 824: log::Level, 1013: u32, 1580: &'{erased} str, 99: std::task::Poll<()>, 288: u8, 666: !, 855: &'{erased} str, 1044: FnDef(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), [&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) }), true]), 1611: std::future::ResumeTy, 319: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 508: FnDef(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), ['{erased}]), 697: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 886: log::Level, 1075: Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) }), 1264: &'{erased} [&'{erased} str; 1_usize], 1453: &'{erased} mut futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>, 1642: FnDef(DefId(2:44305 ~ core[aaf1]::future::into_future::IntoFuture::into_future), [Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })]), 161: u8, 539: FnDef(DefId(2:44327 ~ core[aaf1]::task::poll::Poll::Ready::{constructor#0}), [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>]), 728: (&'{erased} str, &'{erased} str, &'{erased} str), 1295: &'{erased} remote::GameMessage, 1484: (), 3: &'{erased} mut remote::communicate::ConnectionContext, 192: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), 570: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 759: log::LevelFilter, 948: std::result::Result<remote::GameMessage, serde_json::Error>, 1137: (), 1326: FnDef(DefId(51:189 ~ log[0e1b]::__private_api::log), ['{erased}, ()]), 1515: (), 34: log::Level, 223: bool, 412: &'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) }), 601: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 790: std::fmt::Arguments<'{erased}>, 979: FnDef(DefId(51:147 ~ log[0e1b]::max_level), []), 1168: log::Level, 1546: !, 65: log::Level, 254: (), 443: std::task::Poll<std::option::Option<remote::GameMessage>>, 632: log::LevelFilter, 821: (), 1010: &'{erased} str, 1199: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize], 1388: bool, 96: &'{erased} mut std::task::Context<'{erased}>, 285: u8, 474: !, 852: &'{erased} (&'{erased} str, &'{erased} str, &'{erased} str), 1041: &'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) }), 1419: core::fmt::rt::Argument<'{erased}>, 1608: Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), 127: (), 316: std::pin::Pin<&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>>, 694: log::Level, 1072: (), 1261: std::fmt::Arguments<'{erased}>, 1450: futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>, 158: (), 347: std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, 536: std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 725: log::Level, 914: &'{erased} &'{erased} tungstenite::Error, 1103: bool, 1292: FnDef(DefId(212:1074 ~ serde_json[ddef]::ser::to_string), [remote::GameMessage]), 1481: std::future::ResumeTy} }, node_args: UnordMap { inner: {1469: [std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>], 567: [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>], 756: [log::Level, log::LevelFilter], 823: [log::Level, log::LevelFilter], 1268: ['{erased}, true], 610: [std::result::Result<tungstenite::Message, tungstenite::Error>], 1311: [log::Level, log::LevelFilter], 476: [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>], 153: [u8, {type error}], 330: [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>], 1031: [remote::GameMessage], 629: [log::Level, log::LevelFilter], 1074: [Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) })], 1586: ['{erased}], 1196: ['{erased}, std::option::Option<remote::GameMessage>], 38: [log::Level, log::LevelFilter], 1507: [log::Level, log::LevelFilter], 93: [&'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), true], 605: [std::result::Result<tungstenite::Message, tungstenite::Error>], 849: ['{erased}, true], 1105: ['{erased}, ()], 904: ['{erased}, ()], 1404: ['{erased}, ()], 502: ['{erased}], 1203: ['{erased}], 368: [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>], 1057: [std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>], 533: [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>], 1557: [true], 1167: [log::Level, log::LevelFilter], 1612: [&'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) }), true], 1289: [std::string::String, serde_json::Error, Closure(DefId(0:1856 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#5}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 serde_json::Error,)), [Region(BrAnon)]), {type error}])], 1545: [(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })], 64: ['{erased}, true], 95: ['{erased}, '{erased}], 1119: ['{erased}, &'{erased} tokio::sync::mpsc::error::SendError<remote::GameMessage>], 918: ['{erased}, &'{erased} tungstenite::Error], 717: ['{erased}, &'{erased} tungstenite::Error], 1229: [remote::GameMessage], 1418: ['{erased}, tungstenite::Message], 1028: [(), tokio::sync::mpsc::error::SendError<remote::GameMessage>, Closure(DefId(0:1855 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#4}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 tokio::sync::mpsc::error::SendError<remote::GameMessage>,)), [Region(BrAnon)]), {type error}])], 193: [futures_util::stream::SplitStream<S/#0>], 638: ['{erased}, ()], 693: [log::Level, log::LevelFilter], 1516: ['{erased}, ()], 870: [&'{erased} str, tungstenite::Error, Closure(DefId(0:1853 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#2}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 tungstenite::Error,)), [Region(BrAnon)]), {type error}])], 1126: ['{erased}], 1248: [log::Level, log::LevelFilter], 925: ['{erased}], 212: [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>, Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])], 724: ['{erased}], 1425: ['{erased}], 1614: ['{erased}, '{erased}], 1224: [remote::GameMessage], 1090: [log::Level, log::LevelFilter], 1023: [remote::GameMessage, serde_json::Error], 889: [log::Level, log::LevelFilter], 1145: [(), tokio::sync::mpsc::error::SendError<remote::GameMessage>], 1456: [&'{erased} mut futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>, true], 109: [()], 554: [&'{erased} mut tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>, true], 1389: [log::Level, log::LevelFilter], 1444: [futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message], 97: [Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })], 1365: [std::string::String, serde_json::Error], 975: [log::Level, log::LevelFilter], 140: [u8], 518: [std::ops::Range<u32>], 829: [log::Level, log::LevelFilter], 250: [u32], 762: [log::Level, log::LevelFilter], 951: ['{erased}, remote::GameMessage], 238: [u32], 1317: [log::Level, log::LevelFilter], 1628: [()], 1616: [Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })], 702: ['{erased}, ()], 123: [Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })], 1592: ['{erased}], 1458: ['{erased}, '{erased}], 623: [log::Level, log::LevelFilter], 44: [log::Level, log::LevelFilter], 556: ['{erased}, '{erased}], 1257: ['{erased}, ()], 1568: ['{erased}, true], 1501: [log::Level, log::LevelFilter], 20: [S/#0, tungstenite::Message], 1044: [&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) }), true], 197: [remote::GameMessage], 1154: [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>], 508: ['{erased}], 429: [Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })], 106: [()], 1575: [true], 1642: [Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:2499 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::update_status::{opaque#0}) })], 417: [&'{erased} mut Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) }), true], 1441: [(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) }), Closure(DefId(0:1857 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#6}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) }),)), [Region(BrAnon)]), {type error}])], 539: [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>], 984: ['{erased}, ()], 1173: [log::Level, log::LevelFilter], 649: ['{erased}, true], 838: ['{erased}, ()], 771: ['{erased}, ()], 1472: [std::result::Result<(), Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })>], 570: [remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>], 247: [u32], 948: [remote::GameMessage, serde_json::Error, Closure(DefId(0:1854 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#3}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 serde_json::Error,)), [Region(BrAnon)]), {type error}])], 1460: [futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>], 558: [tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>], 491: [true], 1326: ['{erased}, ()], 1527: ['{erased}, true], 479: [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>], 1625: [()], 1046: ['{erased}, '{erased}], 321: [futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>], 443: [std::option::Option<remote::GameMessage>], 53: ['{erased}, ()], 309: [&'{erased} mut futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, true], 175: [u8, {type error}], 687: [log::Level, log::LevelFilter], 943: [&'{erased} str, tungstenite::Error], 742: [tungstenite::Message, tungstenite::Error], 998: ['{erased}, &'{erased} serde_json::Error], 541: [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>], 1242: [log::Level, log::LevelFilter], 596: [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>], 785: ['{erased}, tungstenite::Message], 1486: [futures_util::sink::Send<'{erased}, futures_util::stream::SplitSink<S/#0, tungstenite::Message>, tungstenite::Message>], 1553: [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>], 584: [tokio::future::poll_fn::PollFn<Closure(DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}), [S/#0, i16, Binder(extern "RustCall" fn((&'^0 mut std::task::Context<'^1>,)) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, [Region(BrAnon), Region(BrAnon)]), {type error}])>], 1096: [log::Level, log::LevelFilter], 895: [log::Level, log::LevelFilter], 1340: ['{erased}, &'{erased} serde_json::Error], 438: [std::option::Option<remote::GameMessage>], 371: [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>], 1395: [log::Level, log::LevelFilter], 1005: ['{erased}], 1060: [std::result::Result<(), tokio::sync::mpsc::error::SendError<remote::GameMessage>>], 670: [tungstenite::Message, tungstenite::Error, Closure(DefId(0:1852 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#1}), [S/#0, i32, Binder(extern "RustCall" fn((&'^0 tungstenite::Error,)), [Region(BrAnon)]), {type error}])], 1182: ['{erased}, ()], 792: ['{erased}], 1048: [Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19495 ~ tokio[4bca]::sync::mpsc::bounded::{impl#3}::send::{opaque#0}) })], 1371: [std::string::String], 335: [std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>], 1292: [remote::GameMessage], 524: [std::ops::Range<u32>], 969: [log::Level, log::LevelFilter], 1347: ['{erased}]} }, user_provided_types: UnordMap { inner: {64: Canonical { value: TypeOf(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), UserArgs { args: ['^0, ^1: bool], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Effect }, CanonicalVarInfo { kind: Region(U0) }] }, 1527: Canonical { value: TypeOf(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), UserArgs { args: ['^0, ^1: bool], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Effect }, CanonicalVarInfo { kind: Region(U0) }] }, 1268: Canonical { value: TypeOf(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), UserArgs { args: ['^0, ^1: bool], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Effect }, CanonicalVarInfo { kind: Region(U0) }] }, 1119: Canonical { value: TypeOf(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, 150: Canonical { value: Ty(u8), max_universe: U0, variables: [] }, 918: Canonical { value: TypeOf(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, 717: Canonical { value: TypeOf(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, 1418: Canonical { value: TypeOf(DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, 1592: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 309: Canonical { value: TypeOf(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), UserArgs { args: [^0, ^1: bool], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:9459 ~ core[aaf1]::pin::{impl#6}), self_ty: std::pin::Pin<^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Effect }, CanonicalVarInfo { kind: Ty(General(U0)) }] }, 1586: Canonical { value: TypeOf(DefId(2:10190 ~ core[aaf1]::fmt::rt::{impl#1}::none), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 1196: Canonical { value: TypeOf(DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, 172: Canonical { value: Ty(u8), max_universe: U0, variables: [] }, 998: Canonical { value: TypeOf(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, 1126: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 1568: Canonical { value: TypeOf(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), UserArgs { args: ['^0, ^1: bool], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Effect }, CanonicalVarInfo { kind: Region(U0) }] }, 925: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 724: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 785: Canonical { value: TypeOf(DefId(2:10163 ~ core[aaf1]::fmt::rt::{impl#1}::new_debug), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, 849: Canonical { value: TypeOf(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), UserArgs { args: ['^0, ^1: bool], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Effect }, CanonicalVarInfo { kind: Region(U0) }] }, 1425: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 136: Canonical { value: Ty(u8), max_universe: U0, variables: [] }, 508: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 1340: Canonical { value: TypeOf(DefId(2:10160 ~ core[aaf1]::fmt::rt::{impl#1}::new_display), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, 502: Canonical { value: TypeOf(DefId(2:10190 ~ core[aaf1]::fmt::rt::{impl#1}::none), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10155 ~ core[aaf1]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 1203: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 1005: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 417: Canonical { value: TypeOf(DefId(2:9461 ~ core[aaf1]::pin::{impl#6}::new_unchecked), UserArgs { args: [^0, ^1: bool], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:9459 ~ core[aaf1]::pin::{impl#6}), self_ty: std::pin::Pin<^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Effect }, CanonicalVarInfo { kind: Ty(General(U0)) }] }, 1371: Canonical { value: TypeOf(DefId(294:620 ~ tungstenite[6c23]::protocol::message::{impl#1}::text), UserArgs { args: [^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(294:619 ~ tungstenite[6c23]::protocol::message::{impl#1}), self_ty: tungstenite::Message }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }] }, 792: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, 649: Canonical { value: TypeOf(DefId(2:10239 ~ core[aaf1]::fmt::{impl#2}::new_const), UserArgs { args: ['^0, ^1: bool], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Effect }, CanonicalVarInfo { kind: Region(U0) }] }, 1347: Canonical { value: TypeOf(DefId(2:10240 ~ core[aaf1]::fmt::{impl#2}::new_v1), UserArgs { args: ['^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:10237 ~ core[aaf1]::fmt::{impl#2}), self_ty: std::fmt::Arguments<'^1> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }} }, user_provided_sigs: UnordMap { inner: {DefId(0:1856 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#5}): Canonical { value: Binder { value: extern "RustCall" fn(^1_0) -> ^1_1, bound_vars: [] }, max_universe: U1, variables: [CanonicalVarInfo { kind: Ty(General(U1)) }, CanonicalVarInfo { kind: Ty(General(U1)) }] }, DefId(0:1853 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#2}): Canonical { value: Binder { value: extern "RustCall" fn(^1_0) -> ^1_1, bound_vars: [] }, max_universe: U1, variables: [CanonicalVarInfo { kind: Ty(General(U1)) }, CanonicalVarInfo { kind: Ty(General(U1)) }] }, DefId(0:1857 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#6}): Canonical { value: Binder { value: extern "RustCall" fn(^1_0) -> ^1_1, bound_vars: [] }, max_universe: U1, variables: [CanonicalVarInfo { kind: Ty(General(U1)) }, CanonicalVarInfo { kind: Ty(General(U1)) }] }, DefId(0:1854 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#3}): Canonical { value: Binder { value: extern "RustCall" fn(^1_0) -> ^1_1, bound_vars: [] }, max_universe: U1, variables: [CanonicalVarInfo { kind: Ty(General(U1)) }, CanonicalVarInfo { kind: Ty(General(U1)) }] }, DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}): Canonical { value: Binder { value: extern "RustCall" fn(^1_0) -> ^1_1, bound_vars: [] }, max_universe: U1, variables: [CanonicalVarInfo { kind: Ty(General(U1)) }, CanonicalVarInfo { kind: Ty(General(U1)) }] }, DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}): Canonical { value: Binder { value: extern "RustCall" fn(std::future::ResumeTy), bound_vars: [] }, max_universe: U0, variables: [] }, DefId(0:1855 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#4}): Canonical { value: Binder { value: extern "RustCall" fn(^1_0) -> ^1_1, bound_vars: [] }, max_universe: U1, variables: [CanonicalVarInfo { kind: Ty(General(U1)) }, CanonicalVarInfo { kind: Ty(General(U1)) }] }, DefId(0:1852 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#1}): Canonical { value: Binder { value: extern "RustCall" fn(^1_0) -> ^1_1, bound_vars: [] }, max_universe: U1, variables: [CanonicalVarInfo { kind: Ty(General(U1)) }, CanonicalVarInfo { kind: Ty(General(U1)) }] }} }, adjustments: UnordMap { inner: {1091: [Borrow(Ref('{erased}, Not)) -> &log::Level], 445: [NeverToAny -> std::option::Option<GameMessage>], 890: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1414: [Deref(None) -> tungstenite::Message, Borrow(Ref('{erased}, Not)) -> &tungstenite::Message], 1390: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1189: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 1122: [Deref(None) -> [core::fmt::rt::Argument<'_>; 1], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 1], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 921: [Deref(None) -> [core::fmt::rt::Argument<'_>; 1], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 1], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 854: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 275: [NeverToAny -> ()], 720: [Deref(None) -> [core::fmt::rt::Argument<'_>; 1], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 1], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 397: [], 976: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1421: [Deref(None) -> [core::fmt::rt::Argument<'_>; 1], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 1], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 1555: [NeverToAny -> ()], 830: [Borrow(Ref('{erased}, Not)) -> &log::Level], 763: [Borrow(Ref('{erased}, Not)) -> &log::Level], 696: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1208: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 1129: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 1318: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1251: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 928: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 349: [], 727: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 1428: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 337: [NeverToAny -> std::option::Option<Result<tungstenite::Message, tungstenite::Error>>], 392: [], 69: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 1093: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 892: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 246: [NeverToAny -> ()], 1459: [Deref(None) -> std::task::Context<'_>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut std::task::Context<'_>], 624: [Borrow(Ref('{erased}, Not)) -> &log::Level], 45: [Borrow(Ref('{erased}, Not)) -> &log::Level], 557: [Deref(None) -> std::task::Context<'_>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut std::task::Context<'_>], 1392: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 612: [NeverToAny -> Result<tungstenite::Message, tungstenite::Error>], 1502: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1112: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 978: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 911: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 1033: [Borrow(Ref('{erased}, Not)) -> &tokio::sync::mpsc::Sender<GameMessage>], 710: [Deref(None) -> [&str; 2], Borrow(Ref('{erased}, Not)) -> &[&str; 2], Pointer(Unsize) -> &[&str]], 1411: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 832: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 765: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 954: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 1588: [Deref(None) -> [core::fmt::rt::Argument<'_>; 0], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 0], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 107: [NeverToAny -> ()], 296: [NeverToAny -> ()], 1131: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 930: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 1320: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1564: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 729: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 1174: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1430: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 382: [NeverToAny -> ()], 504: [Deref(None) -> [core::fmt::rt::Argument<'_>; 0], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 0], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 181: [], 626: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 47: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1504: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 90: [Deref(None) -> impl futures_util::Future<Output = ()>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut impl futures_util::Future<Output = ()>], 1047: [Deref(None) -> std::task::Context<'_>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut std::task::Context<'_>], 1626: [NeverToAny -> ()], 200: [Deref(None) -> ConnectionContext], 645: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 1523: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 688: [Borrow(Ref('{erased}, Not)) -> &log::Level], 810: [Borrow(Ref('{erased}, Not)) -> &tungstenite::Message], 1243: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1176: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1231: [NeverToAny -> GameMessage], 652: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 1097: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1609: [Deref(None) -> impl futures_util::Future<Output = ()>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut impl futures_util::Future<Output = ()>], 195: [Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut SplitStream<S>], 896: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1530: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 1396: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1573: [NeverToAny -> ()], 994: [Deref(None) -> &serde_json::Error, Borrow(Ref('{erased}, Not)) -> &&serde_json::Error], 159: [], 403: [NeverToAny -> ()], 781: [Deref(None) -> tungstenite::Message, Borrow(Ref('{erased}, Not)) -> &tungstenite::Message], 970: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1470: [NeverToAny -> ()], 568: [NeverToAny -> ()], 757: [Borrow(Ref('{erased}, Not)) -> &log::Level], 434: [Deref(None) -> std::task::Context<'_>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut std::task::Context<'_>], 690: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 824: [Borrow(Ref('{erased}, Not)) -> &log::Level], 489: [NeverToAny -> ()], 1001: [Deref(None) -> [core::fmt::rt::Argument<'_>; 1], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 1], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 867: [NeverToAny -> ()], 1312: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1245: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1336: [Deref(None) -> &serde_json::Error, Borrow(Ref('{erased}, Not)) -> &&serde_json::Error], 1446: [Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut SplitSink<S, tungstenite::Message>], 788: [Deref(None) -> [core::fmt::rt::Argument<'_>; 1], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 1], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 654: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 1099: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 898: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1343: [Deref(None) -> [core::fmt::rt::Argument<'_>; 1], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 1], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 1532: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 630: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1398: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1008: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 1264: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 874: [Borrow(Ref('{erased}, Not)) -> &tungstenite::Message], 39: [Borrow(Ref('{erased}, Not)) -> &log::Level], 551: [Deref(None) -> tokio::future::poll_fn::PollFn<{closure@/home/valorie/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/macros/select.rs:482:46: 482:50}>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut tokio::future::poll_fn::PollFn<{closure@/home/valorie/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.37.0/src/macros/select.rs:482:46: 482:50}>], 1453: [Deref(None) -> futures_util::sink::Send<'_, SplitSink<S, tungstenite::Message>, tungstenite::Message>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut futures_util::sink::Send<'_, SplitSink<S, tungstenite::Message>, tungstenite::Message>], 1508: [Borrow(Ref('{erased}, Not)) -> &log::Level], 795: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 472: [NeverToAny -> ()], 82: [Deref(None) -> ConnectionContext, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut ConnectionContext], 1295: [Deref(None) -> GameMessage, Borrow(Ref('{erased}, Not)) -> &GameMessage], 972: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 326: [Deref(None) -> std::task::Context<'_>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut std::task::Context<'_>], 1350: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 826: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 759: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1271: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 1582: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 1192: [Deref(None) -> std::option::Option<GameMessage>, Borrow(Ref('{erased}, Not)) -> &std::option::Option<GameMessage>], 290: [], 991: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 1058: [NeverToAny -> ()], 1314: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1168: [Borrow(Ref('{erased}, Not)) -> &log::Level], 845: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 778: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 199: [Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut tokio::sync::mpsc::Receiver<GameMessage>], 1034: [Deref(None) -> ConnectionContext], 1601: [Deref(None) -> ConnectionContext, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut ConnectionContext], 632: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1333: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 498: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 1010: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 364: [NeverToAny -> ()], 41: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1199: [Deref(None) -> [core::fmt::rt::Argument<'_>; 1], Borrow(Ref('{erased}, Not)) -> &[core::fmt::rt::Argument<'_>; 1], Pointer(Unsize) -> &[core::fmt::rt::Argument<'_>]], 1510: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 96: [Deref(None) -> std::task::Context<'_>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut std::task::Context<'_>], 285: [], 797: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 852: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 1041: [Deref(None) -> impl futures_util::Future<Output = Result<(), tokio::sync::mpsc::error::SendError<GameMessage>>>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut impl futures_util::Future<Output = Result<(), tokio::sync::mpsc::error::SendError<GameMessage>>>], 1352: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 517: [Deref(None) -> std::ops::Range<u32>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut std::ops::Range<u32>], 60: [Deref(None) -> [&str; 1], Borrow(Ref('{erased}, Not)) -> &[&str; 1], Pointer(Unsize) -> &[&str]], 1273: [Deref(None) -> str, Borrow(Ref('{erased}, Not)) -> &str], 694: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1206: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)], 1249: [Borrow(Ref('{erased}, Not)) -> &log::Level], 1115: [Deref(None) -> &tokio::sync::mpsc::error::SendError<GameMessage>, Borrow(Ref('{erased}, Not)) -> &&tokio::sync::mpsc::error::SendError<GameMessage>], 914: [Deref(None) -> &tungstenite::Error, Borrow(Ref('{erased}, Not)) -> &&tungstenite::Error], 1170: [Borrow(Ref('{erased}, Not)) -> &log::LevelFilter], 1615: [Deref(None) -> std::task::Context<'_>, Borrow(Ref('{erased}, Mut { allow_two_phase_borrow: Yes })) -> &mut std::task::Context<'_>], 713: [Deref(None) -> &tungstenite::Error, Borrow(Ref('{erased}, Not)) -> &&tungstenite::Error], 457: [], 67: [Deref(None) -> (&str, &str, &str), Borrow(Ref('{erased}, Not)) -> &(&str, &str, &str)]} }, pat_binding_modes: UnordMap { inner: {317: BindByValue(Mut), 244: BindByValue(Not), 878: BindByValue(Not), 1378: BindByValue(Not), 604: BindByValue(Not), 25: BindByValue(Mut), 1287: BindByValue(Not), 1153: BindByValue(Not), 958: BindByValue(Not), 684: BindByValue(Not), 26: BindByValue(Mut), 87: BindByValue(Mut), 282: BindByValue(Not), 209: BindByValue(Mut), 1038: BindByValue(Mut), 203: BindByValue(Mut), 1239: BindByValue(Not), 1300: BindByValue(Not), 2: BindByValue(Not), 514: BindByValue(Mut), 1087: BindByValue(Not), 1465: BindByValue(Not), 886: BindByValue(Not), 179: BindByValue(Not), 563: BindByValue(Not), 1386: BindByValue(Not), 466: BindByValue(Not), 588: BindByValue(Mut), 9: BindByValue(Not), 966: BindByValue(Not), 3: BindByValue(Not), 1606: BindByValue(Mut), 253: BindByValue(Not), 820: BindByValue(Not), 753: BindByValue(Not), 942: BindByValue(Not), 741: BindByValue(Not), 412: BindByReference(Mut), 668: BindByValue(Not), 1308: BindByValue(Not), 595: BindByValue(Not), 144: BindByValue(Mut), 10: BindByValue(Not), 455: BindByValue(Not), 1223: BindByValue(Not), 1022: BindByValue(Not), 437: BindByValue(Not), 620: BindByValue(Not), 425: BindByValue(Mut), 358: BindByValue(Not), 102: BindByValue(Not), 224: BindByValue(Mut), 157: BindByValue(Not), 35: BindByValue(Not), 1053: BindByValue(Not), 1364: BindByValue(Not), 17: BindByValue(Mut), 1498: BindByValue(Not), 389: BindByValue(Not), 1078: BindByValue(Not), 304: BindByReference(Mut), 237: BindByValue(Not), 1450: BindByValue(Mut), 548: BindByValue(Mut), 676: BindByValue(Not), 219: BindByValue(Not), 347: BindByValue(Not), 1621: BindByValue(Not), 1164: BindByValue(Not), 329: BindByValue(Not)} }, pat_adjustments: UnordMap { inner: {305: [&'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) }))], 413: [&'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) }))]} }, closure_kind_origins: UnordMap { inner: {} }, liberated_fn_sigs: UnordMap { inner: {0: fn(&'{erased} mut remote::communicate::ConnectionContext, S/#0) -> Alias(Opaque, AliasTy { args: [S/#0, '{erased}], def_id: DefId(0:2504 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{opaque#0}) }), 1488: extern "RustCall" fn(&'{erased} Alias(Projection, AliasTy { args: [S/#0, tungstenite::Message], def_id: DefId(260:11 ~ futures_sink[92f1]::Sink::Error) })), 1076: extern "RustCall" fn(&'{erased} tokio::sync::mpsc::error::SendError<remote::GameMessage>), 674: extern "RustCall" fn(&'{erased} tungstenite::Error), 1298: extern "RustCall" fn(&'{erased} serde_json::Error), 876: extern "RustCall" fn(&'{erased} tungstenite::Error), 217: extern "RustCall" fn(&'{erased} mut std::task::Context<'{erased}>) -> std::task::Poll<remote::communicate::ConnectionContext::handle_connection::{closure#0}::__tokio_select_util::Out<std::option::Option<std::result::Result<tungstenite::Message, tungstenite::Error>>, std::option::Option<remote::GameMessage>>>, 956: extern "RustCall" fn(&'{erased} serde_json::Error), 1650: extern "RustCall" fn(std::future::ResumeTy)} }, fru_field_types: UnordMap { inner: {} }, coercion_casts: UnordSet { inner: {} }, used_trait_imports: UnordSet { inner: {DefId(0:532 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{use#4}), DefId(0:533 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{use#5})} }, tainted_by_errors: Some(ErrorGuaranteed(())), concrete_opaque_types: {OpaqueTypeKey { def_id: DefId(0:2504 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{opaque#0}), args: [S/#0, '{erased}] }: OpaqueHiddenType { span: src/remote/communicate.rs:285:5: 286:66 (#1537), ty: Coroutine(DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}), [S/#0, (), std::future::ResumeTy, (), (), {type error}, {type error}]) }}, closure_min_captures: UnordMap { inner: {DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}): {HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).3): [CapturedPlace { var_ident: self#0, place: Place { base_ty: &'{erased} mut remote::communicate::ConnectionContext, base: Upvar(UpvarId(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).3);`self`;DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}))), projections: [] }, info: CaptureInfo { capture_kind_expr_id: Some(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).5)), path_expr_id: Some(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).5)), capture_kind: ByValue }, mutability: Not, region: None }], HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).10): [CapturedPlace { var_ident: ws_stream#0, place: Place { base_ty: S/#0, base: Upvar(UpvarId(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).10);`ws_stream`;DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}))), projections: [] }, info: CaptureInfo { capture_kind_expr_id: Some(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).12)), path_expr_id: Some(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).12)), capture_kind: ByValue }, mutability: Not, region: None }]}, DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}): {HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).144): [CapturedPlace { var_ident: disabled#795, place: Place { base_ty: u8, base: Upvar(UpvarId(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).144);`disabled`;DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}))), projections: [] }, info: CaptureInfo { capture_kind_expr_id: Some(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).349)), path_expr_id: Some(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).349)), capture_kind: ByRef(MutBorrow) }, mutability: Mut, region: Some('{erased}) }], HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).209): [CapturedPlace { var_ident: futures#795, place: Place { base_ty: &'{erased} mut (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), base: Upvar(UpvarId(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).209);`futures`;DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}))), projections: [Projection { ty: (futures_util::stream::Next<'{erased}, futures_util::stream::SplitStream<S/#0>>, Alias(Opaque, AliasTy { args: [remote::GameMessage, '{erased}], def_id: DefId(261:19471 ~ tokio[4bca]::sync::mpsc::bounded::{impl#0}::recv::{opaque#0}) })), kind: Deref }] }, info: CaptureInfo { capture_kind_expr_id: Some(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).300)), path_expr_id: Some(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).300)), capture_kind: ByRef(MutBorrow) }, mutability: Mut, region: Some('{erased}) }]}} }, closure_fake_reads: UnordMap { inner: {DefId(0:1856 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#5}): [], DefId(0:1853 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#2}): [], DefId(0:1857 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#6}): [], DefId(0:1854 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#3}): [], DefId(0:1851 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#0}): [], DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}): [(Place { base_ty: &'{erased} mut remote::communicate::ConnectionContext, base: Upvar(UpvarId(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).3);`self`;DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}))), projections: [] }, ForLet(Some(DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}))), HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).5)), (Place { base_ty: S/#0, base: Upvar(UpvarId(HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).10);`ws_stream`;DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}))), projections: [] }, ForLet(Some(DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}))), HirId(DefId(0:576 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection).12))], DefId(0:1855 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#4}): [], DefId(0:1852 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}::{closure#1}): []} }, rvalue_scopes: RvalueScopes { map: UnordMap { inner: {408: Some(Remainder { block: 486, first_statement_index: 2}), 301: Some(Remainder { block: 378, first_statement_index: 2}), 407: Some(Remainder { block: 486, first_statement_index: 2}), 300: Some(Remainder { block: 378, first_statement_index: 2}), 206: Some(Remainder { block: 586, first_statement_index: 1})} } }, coroutine_interior_predicates: UnordMap { inner: {DefId(0:578 ~ saffron_rhythm_duel[bf4a]::remote::communicate::{impl#2}::handle_connection::{closure#0}): []} }, treat_byte_string_as_slice: UnordSet { inner: {} }, closure_size_eval: UnordMap { inner: {} }, offset_of_data: UnordMap { inner: {} } }
stack backtrace:
   0:     0x78c6d37743e5 - std::backtrace_rs::backtrace::libunwind::trace::hf2a5a8d674be10c3
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5
   1:     0x78c6d37743e5 - std::backtrace_rs::backtrace::trace_unsynchronized::h901905e6f4373184
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5
   2:     0x78c6d37743e5 - std::backtrace::Backtrace::create::he0a3d322821073fe
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/backtrace.rs:331:13
   3:     0x78c6d3774335 - std::backtrace::Backtrace::force_capture::hf02ad2ba8b152424
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/backtrace.rs:312:9
   4:     0x78c6d67c8da4 - std[c43475549e143aa0]::panicking::update_hook::<alloc[f0e9cde25293739e]::boxed::Box<rustc_driver_impl[73bf687fbc913cae]::install_ice_hook::{closure#0}>>::{closure#0}
   5:     0x78c6d378f12c - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::had89a7c2a66fdc99
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/alloc/src/boxed.rs:2029:9
   6:     0x78c6d378f12c - std::panicking::rust_panic_with_hook::hb7d4b05a0196996f
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/panicking.rs:793:13
   7:     0x78c6d378eed6 - std::panicking::begin_panic_handler::{{closure}}::h3398e24742bdf43d
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/panicking.rs:658:13
   8:     0x78c6d378c499 - std::sys_common::backtrace::__rust_end_short_backtrace::h9bf4e74980d56172
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/sys_common/backtrace.rs:171:18
   9:     0x78c6d378ec07 - rust_begin_unwind
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/panicking.rs:646:5
  10:     0x78c6d37d95d6 - core::panicking::panic_fmt::hf373ed489d6fbd13
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/core/src/panicking.rs:72:14
  11:     0x78c6d703c502 - rustc_query_system[9d8b8614d623fcbb]::query::plumbing::incremental_verify_ich_failed::<rustc_middle[3b98839c5a1dee63]::ty::context::TyCtxt>.specialized.5
  12:     0x78c6d7dfa3e8 - rustc_query_system[9d8b8614d623fcbb]::query::plumbing::try_execute_query::<rustc_query_impl[afdd275c63ca026d]::DynamicConfig<rustc_query_system[9d8b8614d623fcbb]::query::caches::VecCache<rustc_span[36d38e5469e1e268]::def_id::LocalDefId, rustc_middle[3b98839c5a1dee63]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt, true>
  13:     0x78c6d81297cf - rustc_query_impl[afdd275c63ca026d]::query_impl::typeck::get_query_incr::__rust_end_short_backtrace
  14:     0x78c6d7fbaddc - rustc_mir_build[ee51ef726b2a468f]::thir::pattern::check_match::check_match
  15:     0x78c6d7fb9f6f - rustc_query_impl[afdd275c63ca026d]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[afdd275c63ca026d]::query_impl::check_match::dynamic_query::{closure#2}::{closure#0}, rustc_middle[3b98839c5a1dee63]::query::erase::Erased<[u8; 1usize]>>
  16:     0x78c6d8136fa3 - rustc_query_system[9d8b8614d623fcbb]::query::plumbing::try_execute_query::<rustc_query_impl[afdd275c63ca026d]::DynamicConfig<rustc_query_system[9d8b8614d623fcbb]::query::caches::VecCache<rustc_span[36d38e5469e1e268]::def_id::LocalDefId, rustc_middle[3b98839c5a1dee63]::query::erase::Erased<[u8; 1usize]>>, false, false, false>, rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt, true>
  17:     0x78c6d8a5a95e - rustc_query_impl[afdd275c63ca026d]::plumbing::force_from_dep_node::<rustc_query_impl[afdd275c63ca026d]::DynamicConfig<rustc_query_system[9d8b8614d623fcbb]::query::caches::VecCache<rustc_span[36d38e5469e1e268]::def_id::LocalDefId, rustc_middle[3b98839c5a1dee63]::query::erase::Erased<[u8; 1usize]>>, false, false, false>>
  18:     0x78c6d8a5a82d - <rustc_query_impl[afdd275c63ca026d]::plumbing::query_callback<rustc_query_impl[afdd275c63ca026d]::query_impl::check_match::QueryType>::{closure#0} as core[aaf1441fdfd750fb]::ops::function::FnOnce<(rustc_middle[3b98839c5a1dee63]::ty::context::TyCtxt, rustc_query_system[9d8b8614d623fcbb]::dep_graph::dep_node::DepNode)>>::call_once
  19:     0x78c6d7c22ab9 - <rustc_query_system[9d8b8614d623fcbb]::dep_graph::graph::DepGraphData<rustc_middle[3b98839c5a1dee63]::dep_graph::DepsType>>::try_mark_previous_green::<rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  20:     0x78c6d7c22a22 - <rustc_query_system[9d8b8614d623fcbb]::dep_graph::graph::DepGraphData<rustc_middle[3b98839c5a1dee63]::dep_graph::DepsType>>::try_mark_previous_green::<rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  21:     0x78c6d7c22a22 - <rustc_query_system[9d8b8614d623fcbb]::dep_graph::graph::DepGraphData<rustc_middle[3b98839c5a1dee63]::dep_graph::DepsType>>::try_mark_previous_green::<rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  22:     0x78c6d7c22a22 - <rustc_query_system[9d8b8614d623fcbb]::dep_graph::graph::DepGraphData<rustc_middle[3b98839c5a1dee63]::dep_graph::DepsType>>::try_mark_previous_green::<rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  23:     0x78c6d7c22a22 - <rustc_query_system[9d8b8614d623fcbb]::dep_graph::graph::DepGraphData<rustc_middle[3b98839c5a1dee63]::dep_graph::DepsType>>::try_mark_previous_green::<rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  24:     0x78c6d7c22a22 - <rustc_query_system[9d8b8614d623fcbb]::dep_graph::graph::DepGraphData<rustc_middle[3b98839c5a1dee63]::dep_graph::DepsType>>::try_mark_previous_green::<rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  25:     0x78c6d7c22a22 - <rustc_query_system[9d8b8614d623fcbb]::dep_graph::graph::DepGraphData<rustc_middle[3b98839c5a1dee63]::dep_graph::DepsType>>::try_mark_previous_green::<rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  26:     0x78c6d7c22a22 - <rustc_query_system[9d8b8614d623fcbb]::dep_graph::graph::DepGraphData<rustc_middle[3b98839c5a1dee63]::dep_graph::DepsType>>::try_mark_previous_green::<rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  27:     0x78c6d8129b03 - rustc_query_system[9d8b8614d623fcbb]::query::plumbing::ensure_must_run::<rustc_query_impl[afdd275c63ca026d]::DynamicConfig<rustc_query_system[9d8b8614d623fcbb]::query::caches::VecCache<rustc_span[36d38e5469e1e268]::def_id::LocalDefId, rustc_middle[3b98839c5a1dee63]::query::erase::Erased<[u8; 0usize]>>, false, false, false>, rustc_query_impl[afdd275c63ca026d]::plumbing::QueryCtxt>
  28:     0x78c6d81258de - rustc_query_impl[afdd275c63ca026d]::query_impl::check_well_formed::get_query_incr::__rust_end_short_backtrace
  29:     0x78c6d68a969d - <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_impl_items::<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#1}>::{closure#0}
  30:     0x78c6d68978fa - rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper::<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>
  31:     0x78c6d68aac23 - rayon_core[66caa360ebaacb3d]::join::join_context::<rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>::{closure#0}, rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>::{closure#1}, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::{closure#0}
  32:     0x78c6d6897b0e - rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper::<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>
  33:     0x78c6d68aac23 - rayon_core[66caa360ebaacb3d]::join::join_context::<rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>::{closure#0}, rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>::{closure#1}, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::{closure#0}
  34:     0x78c6d6897b0e - rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper::<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>
  35:     0x78c6d68aac23 - rayon_core[66caa360ebaacb3d]::join::join_context::<rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>::{closure#0}, rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>::{closure#1}, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::{closure#0}
  36:     0x78c6d6897b0e - rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper::<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>
  37:     0x78c6d68beca3 - <rayon_core[66caa360ebaacb3d]::job::StackJob<rayon_core[66caa360ebaacb3d]::latch::SpinLatch, rayon_core[66caa360ebaacb3d]::join::join_context::call_b<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>, rayon[84e898235db9a02d]::iter::plumbing::bridge_producer_consumer::helper<rayon[84e898235db9a02d]::slice::IterProducer<rustc_hir[f5ffa01055805c2c]::hir::ItemId>, rayon[84e898235db9a02d]::iter::filter_map::FilterMapConsumer<rayon[84e898235db9a02d]::iter::reduce::ReduceConsumer<<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::and<()>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#1}>, rustc_data_structures[ae43f8139d317d4b]::sync::parallel::enabled::try_par_for_each_in<&[rustc_hir[f5ffa01055805c2c]::hir::ItemId], rustc_span[36d38e5469e1e268]::ErrorGuaranteed, <rustc_middle[3b98839c5a1dee63]::hir::ModuleItems>::par_items<rustc_hir_analysis[456bf652a7275c96]::check::wfcheck::check_mod_type_wf::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>::{closure#1}>::{closure#0}, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>> as rayon_core[66caa360ebaacb3d]::job::Job>::execute
  38:     0x78c6d63b1f29 - <rayon_core[66caa360ebaacb3d]::registry::WorkerThread>::wait_until_cold
  39:     0x78c6d63aef29 - <rayon_core[66caa360ebaacb3d]::registry::ThreadBuilder>::run
  40:     0x78c6d67ca827 - <<crossbeam_utils[4c7b32405274828]::thread::ScopedThreadBuilder>::spawn<<rayon_core[66caa360ebaacb3d]::ThreadPoolBuilder>::build_scoped<rustc_interface[13dd181e4fca641e]::util::run_in_thread_pool_with_globals<rustc_interface[13dd181e4fca641e]::interface::run_compiler<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>, rustc_driver_impl[73bf687fbc913cae]::run_compiler::{closure#0}>::{closure#0}, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::{closure#3}::{closure#0}::{closure#0}, rustc_interface[13dd181e4fca641e]::util::run_in_thread_pool_with_globals<rustc_interface[13dd181e4fca641e]::interface::run_compiler<core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>, rustc_driver_impl[73bf687fbc913cae]::run_compiler::{closure#0}>::{closure#0}, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::{closure#3}::{closure#0}::{closure#1}, core[aaf1441fdfd750fb]::result::Result<(), rustc_span[36d38e5469e1e268]::ErrorGuaranteed>>::{closure#0}::{closure#0}::{closure#0}, ()>::{closure#0} as core[aaf1441fdfd750fb]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  41:     0x78c6d67c2b5e - std[c43475549e143aa0]::sys_common::backtrace::__rust_begin_short_backtrace::<alloc[f0e9cde25293739e]::boxed::Box<dyn core[aaf1441fdfd750fb]::ops::function::FnOnce<(), Output = ()> + core[aaf1441fdfd750fb]::marker::Send>, ()>
  42:     0x78c6d67ca4b2 - <<std[c43475549e143aa0]::thread::Builder>::spawn_unchecked_<alloc[f0e9cde25293739e]::boxed::Box<dyn core[aaf1441fdfd750fb]::ops::function::FnOnce<(), Output = ()> + core[aaf1441fdfd750fb]::marker::Send>, ()>::{closure#1} as core[aaf1441fdfd750fb]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  43:     0x78c6d3798a49 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hb70ec58ce45ff730
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/alloc/src/boxed.rs:2015:9
  44:     0x78c6d3798a49 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h18970eba67787878
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/alloc/src/boxed.rs:2015:9
  45:     0x78c6d3798a49 - std::sys::pal::unix::thread::Thread::new::thread_start::h7b88acc640b057dc
                               at /rustc/5f2c7d2bfd46cad00352ab7cd66242077e2e518c/library/std/src/sys/pal/unix/thread.rs:108:17
  46:     0x78c6d3494ac3 - start_thread
                               at ./nptl/pthread_create.c:442:8
  47:     0x78c6d3526850 - __GI___clone3
                               at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
  48:                0x0 - <unknown>


rustc version: 1.79.0-nightly (5f2c7d2bf 2024-03-25)
platform: x86_64-unknown-linux-gnu

query stack during panic:
#0 [typeck] type-checking `remote::communicate::<impl at src/remote/communicate.rs:194:1: 194:23>::handle_connection::{closure#0}`
#1 [check_match] match-checking `remote::communicate::<impl at src/remote/communicate.rs:194:1: 194:23>::handle_connection::{closure#0}`
#2 [check_mod_type_wf] checking that types are well-formed in module `remote::communicate`
#3 [analysis] running analysis passes on this crate
end of query stack
